package com.example.microservicesjavaapp.model;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotBlank;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;

/**
 * Represents a User entity in the system.
 * This entity is mapped to the 'users' table in the database.
 * Each user can be associated with multiple shopping carts.
 */
@Entity // Marks this class as a JPA entity
@Table(name = "users") // Specifies the table name in the database
@Data // Lombok annotation to generate getters, setters, toString, equals, and hashCode
@NoArgsConstructor // Lombok annotation to generate a no-argument constructor
@AllArgsConstructor // Lombok annotation to generate an all-argument constructor
public class User {

    @Id // Marks this field as the primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Configures the primary key to be auto-generated by the database
    private Long id; // Unique identifier for the user

    @Column(unique = true, nullable = false) // Ensures the username is unique and not null
    @NotBlank(message = "Username cannot be empty") // Validation constraint: username cannot be blank
    private String username; // The user's unique username

    // In a real application, password would also be stored here, but for basic auth,
    // Spring Security handles it through UserDetailsService for in-memory or database.
    // we're not persisting password here as it's handled by SecurityConfig.
}
