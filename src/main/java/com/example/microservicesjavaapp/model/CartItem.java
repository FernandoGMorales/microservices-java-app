package com.example.microservicesjavaapp.model;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotNull;
import lombok.*;

/**
 * Represents a CartItem entity in the system.
 * This entity is mapped to the 'cart_items' table in the database.
 * Each cart item represents a specific product within a cart with a given quantity.
 * A unique constraint is applied to ensure that a product can only appear once in a given cart.
 */
@Entity // Marks this class as a JPA entity
@Table(name = "cart_items", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"cart_id", "product_id"}) // Ensures product-cart combination is unique
})
@Data // Lombok annotation to generate getters, setters, toString, equals, and hashCode
@NoArgsConstructor // Lombok annotation to generate a no-argument constructor
@AllArgsConstructor // Lombok annotation to generate an all-argument constructor
public class CartItem {

    @Id // Marks this field as the primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Configures the primary key to be auto-generated by the database
    private Long id; // Unique identifier for the cart item

    @ToString.Exclude
    @EqualsAndHashCode.Exclude
    @ManyToOne // Defines a many-to-one relationship with the Cart entity
    @JoinColumn(name = "cart_id", nullable = false) // Specifies the foreign key column in the 'cart_items' table
    @NotNull(message = "Cart cannot be null for a cart item") // Validation constraint: cart cannot be null
    private Cart cart; // The cart to which this item belongs

    @ManyToOne // Defines a many-to-one relationship with the Product entity
    @JoinColumn(name = "product_id", nullable = false) // Specifies the foreign key column in the 'cart_items' table
    @NotNull(message = "Product cannot be null for a cart item") // Validation constraint: product cannot be null
    private Product product; // The product included in this cart item

    @Column(nullable = false) // Ensures the quantity is not null
    @NotNull(message = "Quantity cannot be null") // Validation constraint: quantity cannot be null
    @Min(value = 1, message = "Quantity must be at least 1") // Validation constraint: quantity must be at least 1
    private Integer quantity; // The quantity of the product in the cart
}
